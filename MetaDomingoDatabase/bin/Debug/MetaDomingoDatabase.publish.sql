/*
Deployment script for MetaDomingoDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MetaDomingoDatabase"
:setvar DefaultFilePrefix "MetaDomingoDatabase"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[BaseCompany]...';


GO
CREATE TABLE [dbo].[BaseCompany] (
    [BaseCompanyId]         NVARCHAR (450) NOT NULL,
    [AdditionalInformation] NVARCHAR (MAX) NULL,
    [Address]               NVARCHAR (MAX) NOT NULL,
    [CompanyName]           NVARCHAR (MAX) NOT NULL,
    [ContactName]           NVARCHAR (MAX) NOT NULL,
    [CreatedAt]             DATETIME2 (7)  NOT NULL,
    [Email]                 NVARCHAR (MAX) NOT NULL,
    [Fax]                   NVARCHAR (MAX) NULL,
    [Phone]                 NVARCHAR (MAX) NOT NULL,
    [TaxRegisteredNumber]   NVARCHAR (MAX) NOT NULL,
    [Website]               NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_BaseCompany] PRIMARY KEY CLUSTERED ([BaseCompanyId] ASC)
);


GO
PRINT N'Creating [dbo].[Currency]...';


GO
CREATE TABLE [dbo].[Currency] (
    [CurrencyId]   NVARCHAR (450) NOT NULL,
    [CreatedAt]    DATETIME2 (7)  NOT NULL,
    [CurrencyCode] NVARCHAR (MAX) NOT NULL,
    [CurrencyName] NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_Currency] PRIMARY KEY CLUSTERED ([CurrencyId] ASC)
);


GO
PRINT N'Creating [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [CustomerId]            NVARCHAR (450) NOT NULL,
    [AdditionalInformation] NVARCHAR (MAX) NULL,
    [Address]               NVARCHAR (MAX) NOT NULL,
    [ContactName]           NVARCHAR (MAX) NOT NULL,
    [CreatedAt]             DATETIME2 (7)  NOT NULL,
    [CustomerFName]         NVARCHAR (MAX) NOT NULL,
    [CustomerSName]         NVARCHAR (MAX) NOT NULL,
    [Email]                 NVARCHAR (MAX) NOT NULL,
    [Fax]                   NVARCHAR (MAX) NULL,
    [Phone]                 NVARCHAR (MAX) NOT NULL,
    [TaxRegisteredNumber]   NVARCHAR (MAX) NOT NULL,
    [Website]               NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_Customer] PRIMARY KEY CLUSTERED ([CustomerId] ASC)
);


GO
PRINT N'Creating [dbo].[CustomerInvoice]...';


GO
CREATE TABLE [dbo].[CustomerInvoice] (
    [CustomerInvoiceId]  NVARCHAR (450)  NOT NULL,
    [HasChild]           NVARCHAR (MAX)  NULL,
    [CreatedAt]          DATETIME2 (7)   NOT NULL,
    [CustomerId]         NVARCHAR (450)  NOT NULL,
    [Discount]           DECIMAL (18, 2) NOT NULL,
    [DueDate]            DATETIME2 (7)   NOT NULL,
    [GrandTotal]         DECIMAL (18, 2) NOT NULL,
    [InvoiceDate]        DATETIME2 (7)   NOT NULL,
    [InvoiceNumber]      NVARCHAR (MAX)  NOT NULL,
    [InvoiceReference]   NVARCHAR (MAX)  NULL,
    [IsPaid]             BIT             NOT NULL,
    [BaseCompanyId]      NVARCHAR (450)  NOT NULL,
    [NoteToRecipient]    NVARCHAR (MAX)  NULL,
    [Shipping]           DECIMAL (18, 2) NOT NULL,
    [SubTotal]           DECIMAL (18, 2) NOT NULL,
    [TaxAmount]          DECIMAL (18, 2) NOT NULL,
    [TermsAndConditions] NVARCHAR (MAX)  NULL,
    CONSTRAINT [PK_CustomerInvoice] PRIMARY KEY CLUSTERED ([CustomerInvoiceId] ASC)
);


GO
PRINT N'Creating [dbo].[CustomerInvoiceLine]...';


GO
CREATE TABLE [dbo].[CustomerInvoiceLine] (
    [CustomerInvoiceLineId] NVARCHAR (450)  NOT NULL,
    [Amount]                DECIMAL (18, 2) NOT NULL,
    [CreatedAt]             DATETIME2 (7)   NOT NULL,
    [CustomerInvoiceId]     NVARCHAR (450)  NULL,
    [Description]           NVARCHAR (MAX)  NULL,
    [ItemId]                NVARCHAR (450)  NOT NULL,
    [Price]                 DECIMAL (18, 2) NOT NULL,
    [Quantity]              REAL            NOT NULL,
    [TaxAmount]             DECIMAL (18, 2) NOT NULL,
    [TaxId]                 NVARCHAR (MAX)  NOT NULL,
    [TotalAmount]           DECIMAL (18, 2) NOT NULL,
    CONSTRAINT [PK_CustomerInvoiceLine] PRIMARY KEY CLUSTERED ([CustomerInvoiceLineId] ASC)
);


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [EmployeeId]            NVARCHAR (450) NOT NULL,
    [AdditionalInformation] NVARCHAR (MAX) NULL,
    [Address]               NVARCHAR (MAX) NOT NULL,
    [ContactName]           NVARCHAR (MAX) NOT NULL,
    [CreatedAt]             DATETIME2 (7)  NOT NULL,
    [EmployeeFName]         NVARCHAR (MAX) NOT NULL,
    [EmployeeSName]         NVARCHAR (MAX) NOT NULL,
    [Email]                 NVARCHAR (MAX) NOT NULL,
    [Fax]                   NVARCHAR (MAX) NULL,
    [Phone]                 NVARCHAR (MAX) NOT NULL,
    [TaxRegisteredNumber]   NVARCHAR (MAX) NOT NULL,
    CONSTRAINT [PK_Employee] PRIMARY KEY CLUSTERED ([EmployeeId] ASC)
);


GO
PRINT N'Creating [dbo].[EmployeeJobcard]...';


GO
CREATE TABLE [dbo].[EmployeeJobcard] (
    [Id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Item]...';


GO
CREATE TABLE [dbo].[Item] (
    [ItemId]          NVARCHAR (450)  NOT NULL,
    [CreatedAt]       DATETIME2 (7)   NOT NULL,
    [CurrencyId]      NVARCHAR (450)  NOT NULL,
    [ItemDescription] NVARCHAR (MAX)  NOT NULL,
    [ItemName]        NVARCHAR (MAX)  NOT NULL,
    [Price]           DECIMAL (18, 2) NOT NULL,
    [TaxId]           NVARCHAR (450)  NOT NULL,
    CONSTRAINT [PK_Item] PRIMARY KEY CLUSTERED ([ItemId] ASC)
);


GO
PRINT N'Creating [dbo].[Jobcard]...';


GO
CREATE TABLE [dbo].[Jobcard] (
    [JobcardId]  NVARCHAR (450) NOT NULL,
    [CreatedBy]  NVARCHAR (450) NOT NULL,
    [CustomerId] NVARCHAR (450) NOT NULL,
    [JobtypeId]  NVARCHAR (450) NOT NULL,
    [StartDate]  DATETIME2 (7)  NOT NULL,
    [EndDate]    DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_Jobcard] PRIMARY KEY CLUSTERED ([JobcardId] ASC)
);


GO
PRINT N'Creating [dbo].[JobcardMaterial]...';


GO
CREATE TABLE [dbo].[JobcardMaterial] (
    [Id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Jobtype]...';


GO
CREATE TABLE [dbo].[Jobtype] (
    [JobtypeId]          NVARCHAR (450)  NOT NULL,
    [CreatedAt]          DATETIME2 (7)   NOT NULL,
    [CurrencyId]         NVARCHAR (450)  NOT NULL,
    [JobtypeDescription] NVARCHAR (MAX)  NOT NULL,
    [JobtypeName]        NVARCHAR (MAX)  NOT NULL,
    [Price]              DECIMAL (18, 2) NOT NULL,
    [TaxId]              NVARCHAR (450)  NOT NULL,
    CONSTRAINT [PK_Jobtype] PRIMARY KEY CLUSTERED ([JobtypeId] ASC)
);


GO
PRINT N'Creating [dbo].[Tax]...';


GO
CREATE TABLE [dbo].[Tax] (
    [TaxId]     NVARCHAR (450) NOT NULL,
    [CreatedAt] DATETIME2 (7)  NOT NULL,
    [TaxLabel]  NVARCHAR (MAX) NOT NULL,
    [TaxRate]   REAL           NOT NULL,
    CONSTRAINT [PK_Tax] PRIMARY KEY CLUSTERED ([TaxId] ASC)
);


GO
PRINT N'Creating [dbo].[Vendor]...';


GO
CREATE TABLE [dbo].[Vendor] (
    [VendorId]              NVARCHAR (450) NOT NULL,
    [AdditionalInformation] NVARCHAR (MAX) NULL,
    [Address]               NVARCHAR (MAX) NOT NULL,
    [ContactName]           NVARCHAR (MAX) NOT NULL,
    [CreatedAt]             DATETIME2 (7)  NOT NULL,
    [Email]                 NVARCHAR (MAX) NOT NULL,
    [Fax]                   NVARCHAR (MAX) NULL,
    [Phone]                 NVARCHAR (MAX) NOT NULL,
    [TaxRegisteredNumber]   NVARCHAR (MAX) NOT NULL,
    [VendorName]            NVARCHAR (MAX) NOT NULL,
    [Website]               NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_Vendor] PRIMARY KEY CLUSTERED ([VendorId] ASC)
);


GO
PRINT N'Creating [dbo].[VendorInvoice]...';


GO
CREATE TABLE [dbo].[VendorInvoice] (
    [VendorInvoiceId]       NVARCHAR (450)  NOT NULL,
    [HasChild]              NVARCHAR (MAX)  NULL,
    [CreatedAt]             DATETIME2 (7)   NOT NULL,
    [Discount]              DECIMAL (18, 2) NOT NULL,
    [DueDate]               DATETIME2 (7)   NOT NULL,
    [GrandTotal]            DECIMAL (18, 2) NOT NULL,
    [InvoiceDate]           DATETIME2 (7)   NOT NULL,
    [InvoiceNumber]         NVARCHAR (MAX)  NOT NULL,
    [InvoiceReference]      NVARCHAR (MAX)  NULL,
    [IsPaid]                BIT             NOT NULL,
    [BaseCompanyId]         NVARCHAR (450)  NOT NULL,
    [Note]                  NVARCHAR (MAX)  NULL,
    [OriginalInvoiceNumber] NVARCHAR (MAX)  NOT NULL,
    [Shipping]              DECIMAL (18, 2) NOT NULL,
    [SubTotal]              DECIMAL (18, 2) NOT NULL,
    [TaxAmount]             DECIMAL (18, 2) NOT NULL,
    [TermsAndConditions]    NVARCHAR (MAX)  NULL,
    [VendorId]              NVARCHAR (450)  NOT NULL,
    CONSTRAINT [PK_VendorInvoice] PRIMARY KEY CLUSTERED ([VendorInvoiceId] ASC)
);


GO
PRINT N'Creating [dbo].[VendorInvoiceLine]...';


GO
CREATE TABLE [dbo].[VendorInvoiceLine] (
    [VendorInvoiceLineId] NVARCHAR (450)  NOT NULL,
    [Amount]              DECIMAL (18, 2) NOT NULL,
    [CreatedAt]           DATETIME2 (7)   NOT NULL,
    [Description]         NVARCHAR (MAX)  NULL,
    [ItemId]              NVARCHAR (450)  NOT NULL,
    [Price]               DECIMAL (18, 2) NOT NULL,
    [Quantity]            REAL            NOT NULL,
    [TaxAmount]           DECIMAL (18, 2) NOT NULL,
    [TaxId]               NVARCHAR (MAX)  NOT NULL,
    [TotalAmount]         DECIMAL (18, 2) NOT NULL,
    [VendorInvoiceId]     NVARCHAR (450)  NULL,
    CONSTRAINT [PK_VendorInvoiceLine] PRIMARY KEY CLUSTERED ([VendorInvoiceLineId] ASC)
);


GO
PRINT N'Creating [dbo].[FK_CustomerInvoice_Customer_CustomerId]...';


GO
ALTER TABLE [dbo].[CustomerInvoice]
    ADD CONSTRAINT [FK_CustomerInvoice_Customer_CustomerId] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Customer] ([CustomerId]);


GO
PRINT N'Creating [dbo].[FK_CustomerInvoice_BaseCompany_BaseCompanyId]...';


GO
ALTER TABLE [dbo].[CustomerInvoice]
    ADD CONSTRAINT [FK_CustomerInvoice_BaseCompany_BaseCompanyId] FOREIGN KEY ([BaseCompanyId]) REFERENCES [dbo].[BaseCompany] ([BaseCompanyId]);


GO
PRINT N'Creating [dbo].[FK_CustomerInvoiceLine_CustomerInvoice_CustomerInvoiceId]...';


GO
ALTER TABLE [dbo].[CustomerInvoiceLine]
    ADD CONSTRAINT [FK_CustomerInvoiceLine_CustomerInvoice_CustomerInvoiceId] FOREIGN KEY ([CustomerInvoiceId]) REFERENCES [dbo].[CustomerInvoice] ([CustomerInvoiceId]);


GO
PRINT N'Creating [dbo].[FK_CustomerInvoiceLine_Item_ItemId]...';


GO
ALTER TABLE [dbo].[CustomerInvoiceLine]
    ADD CONSTRAINT [FK_CustomerInvoiceLine_Item_ItemId] FOREIGN KEY ([ItemId]) REFERENCES [dbo].[Item] ([ItemId]);


GO
PRINT N'Creating [dbo].[FK_Item_Currency_CurrencyId]...';


GO
ALTER TABLE [dbo].[Item]
    ADD CONSTRAINT [FK_Item_Currency_CurrencyId] FOREIGN KEY ([CurrencyId]) REFERENCES [dbo].[Currency] ([CurrencyId]);


GO
PRINT N'Creating [dbo].[FK_Item_Tax_TaxId]...';


GO
ALTER TABLE [dbo].[Item]
    ADD CONSTRAINT [FK_Item_Tax_TaxId] FOREIGN KEY ([TaxId]) REFERENCES [dbo].[Tax] ([TaxId]);


GO
PRINT N'Creating [dbo].[FK_Jobcard_Customer_CustomerId]...';


GO
ALTER TABLE [dbo].[Jobcard]
    ADD CONSTRAINT [FK_Jobcard_Customer_CustomerId] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Customer] ([CustomerId]);


GO
PRINT N'Creating [dbo].[FK_Jobcard_Employee_CreatedBy]...';


GO
ALTER TABLE [dbo].[Jobcard]
    ADD CONSTRAINT [FK_Jobcard_Employee_CreatedBy] FOREIGN KEY ([CreatedBy]) REFERENCES [dbo].[Employee] ([EmployeeId]);


GO
PRINT N'Creating [dbo].[FK_Jobcard_Jobtype_JobtypeId]...';


GO
ALTER TABLE [dbo].[Jobcard]
    ADD CONSTRAINT [FK_Jobcard_Jobtype_JobtypeId] FOREIGN KEY ([JobtypeId]) REFERENCES [dbo].[Jobtype] ([JobtypeId]);


GO
PRINT N'Creating [dbo].[FK_Jobtype_Currency_CurrencyId]...';


GO
ALTER TABLE [dbo].[Jobtype]
    ADD CONSTRAINT [FK_Jobtype_Currency_CurrencyId] FOREIGN KEY ([CurrencyId]) REFERENCES [dbo].[Currency] ([CurrencyId]);


GO
PRINT N'Creating [dbo].[FK_Jobtype_Tax_TaxId]...';


GO
ALTER TABLE [dbo].[Jobtype]
    ADD CONSTRAINT [FK_Jobtype_Tax_TaxId] FOREIGN KEY ([TaxId]) REFERENCES [dbo].[Tax] ([TaxId]);


GO
PRINT N'Creating [dbo].[FK_VendorInvoice_MyCompany_BaseCompanyId]...';


GO
ALTER TABLE [dbo].[VendorInvoice]
    ADD CONSTRAINT [FK_VendorInvoice_MyCompany_BaseCompanyId] FOREIGN KEY ([BaseCompanyId]) REFERENCES [dbo].[BaseCompany] ([BaseCompanyId]);


GO
PRINT N'Creating [dbo].[FK_VendorInvoice_Vendor_VendorId]...';


GO
ALTER TABLE [dbo].[VendorInvoice]
    ADD CONSTRAINT [FK_VendorInvoice_Vendor_VendorId] FOREIGN KEY ([VendorId]) REFERENCES [dbo].[Vendor] ([VendorId]);


GO
PRINT N'Creating [dbo].[FK_VendorInvoiceLine_Item_ItemId]...';


GO
ALTER TABLE [dbo].[VendorInvoiceLine]
    ADD CONSTRAINT [FK_VendorInvoiceLine_Item_ItemId] FOREIGN KEY ([ItemId]) REFERENCES [dbo].[Item] ([ItemId]);


GO
PRINT N'Creating [dbo].[FK_VendorInvoiceLine_VendorInvoice_VendorInvoiceId]...';


GO
ALTER TABLE [dbo].[VendorInvoiceLine]
    ADD CONSTRAINT [FK_VendorInvoiceLine_VendorInvoice_VendorInvoiceId] FOREIGN KEY ([VendorInvoiceId]) REFERENCES [dbo].[VendorInvoice] ([VendorInvoiceId]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
